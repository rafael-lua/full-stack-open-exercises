{"version":3,"sources":["services/phones.js","components/List.js","components/Filter.js","components/Add.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObj","post","id","delete","put","List","persons","filter","handleDelete","length","map","value","name","number","onClick","toUpperCase","includes","Filter","handleFilterChange","onChange","Add","newName","newPhone","handleNameChange","handlePhoneChange","addPerson","type","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setPersons","setFilter","setNewName","setNewPhone","notification","setNotification","notificationType","setNotificationType","useEffect","phoneService","initialValues","updatePerson","updatedPerson","find","p","newEntry","setTimeout","catch","error","errorResponse","e","target","preventDefault","window","confirm","personId","personName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5783202e.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/persons'; // Connect to backend\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data); // https://matthewaisthorpe.com.au/json-object-vs-json-array/\r\n}\r\n\r\nconst create = (newObj) => {\r\n  const request = axios.post(baseUrl, newObj);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n}\r\n\r\nconst update = (id, newObj) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObj);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nexport default { getAll, create, remove, update };","const List = ({persons, filter, handleDelete}) => {\r\n  return (\r\n    <ul>\r\n      {\r\n        filter.length === 0\r\n        ? persons.map((value) => (\r\n          <li key={value.id}>\r\n            {value.name} {value.number} <button onClick={() => handleDelete(value.id)}>Delete</button>\r\n          </li>\r\n        ))\r\n        : persons.filter((value) => value.name.toUpperCase().includes(filter.toUpperCase())).map((value) => (\r\n          <li key={value.id}>\r\n            {value.name} {value.number} <button onClick={() => handleDelete(value.id)}>Delete</button>\r\n          </li>\r\n        ))\r\n      }\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default List;\r\n","const Filter = ({filter, handleFilterChange}) => {\r\n  return (\r\n    <div>\r\n      Filter by: <input value={filter} onChange={handleFilterChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter;\r\n","const Add = ({newName, newPhone, handleNameChange, handlePhoneChange, addPerson}) => {\r\n  return (\r\n    <form>\r\n      <div>\r\n        New Name: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        Number: <input value={newPhone} onChange={handlePhoneChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" onClick={addPerson}>Add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Add;\r\n","const Notification = ({ message, type }) => {\r\n  if(message === null) { return null };\r\n\r\n  const style = {\r\n    color: type === \"error\" ? \"red\" : \"green\",\r\n    background: \"lightgrey\",\r\n    fontSize: 18,\r\n    borderStyle: \"solid\",\r\n    borderRadius: 3,\r\n    padding: 5,\r\n    marginBottom: 5\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={style}>\r\n        {message}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react';\n\nimport phoneService from \"./services/phones\";\n\nimport List from \"./components/List\";\nimport Filter from \"./components/Filter\";\nimport Add from \"./components/Add\";\nimport Notification from \"./components/Notification\";\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]); \n  const [ filter, setFilter ] = useState('');\n  const [ newName, setNewName ] = useState('');\n  const [ newPhone, setNewPhone ] = useState('');\n  const [ notification, setNotification ] = useState(null);\n  const [ notificationType, setNotificationType ] = useState(null);\n\n  const personsHook = () => {\n    phoneService\n      .getAll()\n      .then(initialValues => {\n        setPersons(initialValues);\n      })\n  };\n  \n  useEffect(personsHook, []);\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handlePhoneChange = (e) => {\n    setNewPhone(e.target.value);\n  };\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const addPerson = (e) => {\n    e.preventDefault();\n    if(persons.filter((value) => value.name.toUpperCase() === newName.toUpperCase()).length === 0) {\n      let newPerson = {\n        name: newName,\n        number: newPhone\n      };\n\n      phoneService\n        .create(newPerson)\n        .then((newEntry) => {\n          setNotification(\n            `New entry ${newEntry.name} was created!`\n          );\n          setNotificationType(\n            \"success\"\n          );\n          setTimeout(() => {\n            setNotification(null);\n            setNotificationType(null);\n          }, 5000);\n          setPersons([...persons, newEntry]);\n        });\n    } else {\n      const result = window.confirm(`${newName} is already on the list! Do you want to update its phone number?`);\n      if(result === true) {\n        let personId = persons.find((value) => value.name.toUpperCase() === newName.toUpperCase()).id;\n        updatePerson(personId);\n      }\n    }\n  }\n\n  const handleDelete = (id) => {\n    let personName = persons.find((p) => p.id === id).name;\n    const result = window.confirm(`Are you sure you want to remove: ${personName}`);\n    if(result === true) {\n      phoneService\n        .remove(id)\n        .then(() => {\n          setNotification(\n            `Entry ${personName} was removed.`\n          );\n          setNotificationType(\n            \"success\"\n          );\n          setTimeout(() => {\n            setNotification(null);\n            setNotificationType(null);\n          }, 5000);\n          setPersons(persons.filter((p) => p.id !== id));\n        })\n    }\n  }\n\n  const updatePerson = (id) => {\n    let updatedPerson = {...persons.find((p) => p.id === id), number: newPhone};\n\n    phoneService\n      .update(id, updatedPerson)\n      .then((newEntry) => {\n        setNotification(\n          `Number of ${newEntry.name} was updated!`\n        );\n        setNotificationType(\n          \"success\"\n        );\n        setTimeout(() => {\n          setNotification(null);\n          setNotificationType(null);\n        }, 5000);\n        setPersons(persons.map((p) => p.id === newEntry.id ? newEntry : p));\n      })\n      .catch(error => {\n        let errorResponse = error.response || {data: { error: \"No error response!\"}};\n        setNotification(\n          `${errorResponse.data.error || \"No error details.\"}`\n        );\n        setNotificationType(\n          \"error\"\n        );\n        setTimeout(() => {\n          setNotification(null);\n          setNotificationType(null);\n        }, 5000);\n        // setPersons(persons.filter((p) => p.id !== updatedPerson.id));\n      });\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n      <Notification message={notification} type={notificationType} />\n\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n\n      <h2>Add New</h2>\n\n      <Add newName={newName} newPhone={newPhone} handlePhoneChange={handlePhoneChange} handleNameChange={handleNameChange} addPerson={addPerson} />\n\n      <h2>Numbers</h2>\n\n      <List persons={persons} filter={filter} handleDelete={handleDelete} />\n\n    </div>\n  )\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}